use {
	DateYYYYMMDD
} from "./../../shared/valuetypes.jv";

transform TagToBoolCalculated {
	from tag oftype text;
	to bool oftype boolean;

	bool: tag == "Calculated";
}

// Limiting values to the only possible and to expect according to the paper
constraint TagProperty on text: value in [
	"CDE",
	"Calculated"
];
valuetype Tag oftype text {
	constraints: [
		TagProperty
	];
}

// According to the 1st page of the paper, only these material properties are allowed
constraint PropertyValue on text: value in [
	"Conductivity",
	"Energy",
	"Coulombic Efficiency",
	"Capacity",
	"Voltage"
];
valuetype Property oftype text {
	constraints: [
		PropertyValue
	];
}

pipeline BatteryMaterialsPipeline {

	BatteryMaterialsExtractor
		-> ZipArchiveInterpreter
		-> BatteryMaterialsCSVPicker
		-> BatteryMaterialsTextFileInterpreter
		-> BatteryMaterialsCSVInterpreter
		-> BatteryMaterialsTableInterpreter
		-> TagColumnTransformCalculated
		-> BatteryMaterialsLoader;

	block BatteryMaterialsExtractor oftype HttpExtractor {
		url: "https://s3-eu-west-1.amazonaws.com/pfigshare-u-files/22789760/BatteryData.zip";
	}

	block ZipArchiveInterpreter oftype ArchiveInterpreter {
		archiveType: "zip";
	}

	block BatteryMaterialsCSVPicker oftype FilePicker {
		path: "/battery_merged.csv";
	}

	block BatteryMaterialsTextFileInterpreter oftype TextFileInterpreter { }

	block BatteryMaterialsCSVInterpreter oftype CSVInterpreter {
		delimiter: ",";
		enclosing: '"';
		enclosingEscape: '"';
	}

	block BatteryMaterialsTableInterpreter oftype TableInterpreter {
		header: true;
		columns: [
			"Property" oftype Property,
			"Name" oftype text,
			"Value" oftype decimal,
			"Raw_unit" oftype text,
			"Raw_value" oftype text,
			"Unit" oftype SiUnit,
			"Extracted_name" oftype text,
			"DOI" oftype DOI,
			"Specifier" oftype text,
			"Tag" oftype Tag,
			"Warning" oftype text,
			"Type" oftype text,
			"Info" oftype text,
			"Title" oftype text,
			"Journal" oftype text,
			"Date" oftype DateYYYYMMDD,
			"Correctness" oftype text
		];
	}

	block TagColumnTransformCalculated oftype TableTransformer {
		inputColumns: [
			"Tag"
		];
		outputColumn: "Calculated_data";
		uses: TagToBoolCalculated;
	}

	block BatteryMaterialsLoader oftype SQLiteLoader {
		table: "BatteryMaterials";
		file: "./BatteryMaterialsMerged.sqlite";
	}
}
